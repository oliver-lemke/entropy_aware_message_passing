# This file acts as the base configuration file for the project.
# See configs/template.yaml for an example how to create a deviating configuration file
# By default the config/user.yaml configuration file is used.

# used for naming purposes
note: "init"

#######################################################################################
################################### MODEL PARAMETERS ##################################
#######################################################################################

# the type of solution to run
# can be any in ["basic_gcn", "hrnet_gcn"]
model_type: "hrnet_gcn"

model_parameters:
  basic_gcn:
    pretrained_weights: null
    depth: 2
    hidden_dim: 256
  hrnet_gcn:
    pretrained_weights: null
    depth: 24
    hidden_dim: 256
    branches:
      - 0
      - 8
      - 16
      - 24

# can be in [basic_gcn]
conv_block_args:
  block_type: "basic_gcn"
  basic_gcn:
    dropout_rate: 0.0
# can be in [sum, mean, max, simple_conv]
fusion_block_args:
  block_type: "mean"
  simple_conv:
    residual: True
    depth: 1
    hidden_dim:  16
# can be in [id, full]
transform_block_args:
  block_type: "id"
  full:
    depth: 2
    hidden_dim: 128
# can be in [single, sum, mean, max, simple_conv]
output_block_args:
  block_type: "mean"
  single:
    branch_index: -1
  simple_conv:
    residual: True
    depth: 1
    hidden_dim:  16


#######################################################################################
################################## DATASET PARAMETERS #################################
#######################################################################################

# can be in ["planetoid", "faust", "mnist"]
dataset: "planetoid"
dataset_parameters:
  planetoid:
    name: "Cora"


#######################################################################################
######################################## OTHER ########################################
#######################################################################################

hyperparameters:
  train:
    batch_size: 4096
    learning_rate: 0.001
    weight_decay: 0
    epochs: 1000
    save_every: 50
  val:
    batch_size: 4096
    val_every: 20

# device on which to train
device: "cuda"

# whether to resume training from earlier model
resume_training: False

# paths are relative from project_root_directory
subpaths:
  data: "resources/data/"
  cache: "resources/cache/"
  logs: "resources/logs/"
  output: "resources/output/"
  resume_from: "path/to/weights"
  pretrained_weights: "resources/pretrained_weights"

save_names:
  weights: "weights.pth"
  optimizer: "optimizer.pth"
  pretrained_metadata: "pretrained_metadata.json"

wandb:
  enable: True
  entity: "gnn_dl"
  project: "Init Tests"
  group: null

logging:
  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  console: "DEBUG"
  wandb: "DEBUG"